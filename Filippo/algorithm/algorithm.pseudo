// INPUT: The query Q on the target graph
// OUTPUT: Boolean tells if it is possible to aggregate or not
function aggregate(Q) {
    gb_clauses = Q <= {
        ?l rdf:type :Level, ?l :hasFeature ?f, 
        NOT EXISTS {?f rdf:type :Measure}
    }
    measures = Q <= {
        ?m rdf:type :Measure
    }
    return gb_clauses != 0 && measures != 0
}

// INPUT: The query Q on the target graph
// OUTPUT: The Group By clauses names set
function getGroupByClause(Q)
do
    gb_clauses = Q <= {
        ?l rdf:type :Level, ?l :hasFeature ?f, 
        NOT EXISTS {?f rdf:type :Measure}
    }
    return gb_clauses
end

// INPUT: The query Q on the target graph G
// OUTPUT: The aggregating clauses set
function aggregatingClauses(Q,G) 
do
    agg_clauses, func = Q <= {
        ?f rdf:type :Measure,
        G <= {
            ?func :aggregates ?f 
        }
    }
    agg_clauses = format(agg_clauses, func)
    return agg_clauses
end

// INPUT: The query Q on the target graph G
// OUTPUT: The new query Q
function expandingIds(Q,G) 
do
    ids = Q <= {
        ?l rdf:type :Level,
        G <= {
            ?l :hasFeature ?id,
            ?id rdf:type :Identifiers
        }
    }
    Q add ids
end

// INPUT: The group by clauses gb and the aggregating clauses with theri operator
// OUTPUT: The sql query to perform aggregation in string format
function makeSqlQuery(gb,agg,tableName)
do
    gb = stringCommaSeparated(getGroupByClause(q))
    agg = stringCommaSeparated(aggregatingClauses(q))
    query = 
    "
    SELECT _gb_,_ag_
    FROM (V)
    GROUP BY _gb_
    "
    query = replace(gb,ag,query)
    return query
end

// INPUT: The global query q
// OUTPUT: The aggregated result in table format
function aggregation(q)
do
    gb = getGroupByClause(q)
    agg = aggregatingClauses(q)
    sourceQueries = rewriting(q)
    conjunctiveQueries = h(sourceQueries)
    table = exec(conjunctiveQueries)
    aggregationQuery = makeSqlQuery(gb,agg)
    aggregatedOutput = executeSqlQuery(table,aggregationQuery,name(table))
    return aggregatedOutput
end